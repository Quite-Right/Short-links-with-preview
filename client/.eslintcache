[{"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\index.js":"1","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\App.js":"2","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\reportWebVitals.js":"3","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Footer\\index.js":"4","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\index.js":"5","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Header\\index.js":"6","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\Form\\index.js":"7","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\Form\\CopyBtn\\index.js":"8","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\Form\\VKPreview\\index.js":"9","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\Form\\TGPreview\\index.js":"10"},{"size":504,"mtime":1607207011433,"results":"11","hashOfConfig":"12"},{"size":412,"mtime":1607282512310,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":299,"mtime":1608925626561,"results":"15","hashOfConfig":"12"},{"size":264,"mtime":1607290640390,"results":"16","hashOfConfig":"12"},{"size":345,"mtime":1608473385193,"results":"17","hashOfConfig":"12"},{"size":8963,"mtime":1608492664614,"results":"18","hashOfConfig":"12"},{"size":3327,"mtime":1607297430561,"results":"19","hashOfConfig":"12"},{"size":1294,"mtime":1608401667391,"results":"20","hashOfConfig":"12"},{"size":1214,"mtime":1608491977176,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vjh8qx",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\index.js",[],["44","45"],"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\App.js",[],"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\reportWebVitals.js",[],"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Footer\\index.js",["46"],"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\index.js",[],"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\Form\\index.js",["47"],"import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport VKPreview from \"./VKPreview\";\r\nimport TGPreview from \"./TGPreview\";\r\nimport CopyBtn from \"./CopyBtn\";\r\n\r\nexport default function Form() {\r\n  // подключаем хук location для доступа к url браузера\r\n  const location = useLocation();\r\n  // подключаем хук history для перехода по url\r\n  const history = useHistory();\r\n  // используем эффект, в котором пытаемся получить информацию о уже\r\n  // созданной ссылке, если мы находимся на руте содержащем 24 символа\r\n  // после символа /\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isPlaceholderImage, setIsPlaceholderImage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"get-effect\");\r\n    if (location.pathname.length === 25) {\r\n      axios\r\n        .get(\"/api/get-link?id=\" + location.pathname.slice(1, 25))\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (response && response.data) {\r\n            // если нашли, то ставим обновляем значения формы\r\n            console.log(response.data);\r\n            formik.setValues({\r\n              ...response.data,\r\n              id: location.pathname.slice(1, 25),\r\n            });\r\n          }\r\n          setIsLoading(false);\r\n        })\r\n        .catch((reason) => {\r\n          // если мы не нашли ссылку уведомляем пользователя об этом и перенаправляем на основной рут\r\n          toast.error(\"Link you are looking for doesn't exist\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: false,\r\n            progress: undefined,\r\n            onClose: () => {\r\n              history.push(\"/\");\r\n            },\r\n          });\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      linkFrom: \"\",\r\n      id: \"\",\r\n      linkTo: \"\",\r\n      image: \"https://mr-sl.com/logo_black.png\",\r\n      title: \"MR Short Links\",\r\n      description: \"This link was provided by mr-sl.com\",\r\n    },\r\n    onSubmit: (values) => {\r\n      if (location.pathname.length === 25) {\r\n        axios\r\n          .put(\"/api/update-link\", {\r\n            id: formik.values.id,\r\n            linkTo: formik.values.linkTo,\r\n            image: formik.values.image,\r\n            title: formik.values.title,\r\n            description: formik.values.description,\r\n          })\r\n          .then((response) => {\r\n            if (response && response.data) {\r\n              toast.success(\"Successfully updated\", {\r\n                position: \"top-right\",\r\n                autoClose: 1250,\r\n                hideProgressBar: false,\r\n                closeOnClick: false,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                progress: undefined,\r\n                onClose: () => {\r\n                  history.push(\"/\" + response.data._id);\r\n                  formik.setSubmitting(false);\r\n                },\r\n              });\r\n            }\r\n          })\r\n          .catch((reason) => {\r\n            toast.error(\"Something went wrong\", {\r\n              position: \"top-right\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: false,\r\n              progress: undefined,\r\n            });\r\n            formik.setSubmitting(false);\r\n          });\r\n      } else {\r\n        axios\r\n          .post(\"/api/create-link\", {\r\n            linkTo: formik.values.linkTo,\r\n            image: formik.values.image,\r\n            title: formik.values.title,\r\n            description: formik.values.description,\r\n          })\r\n          .then((response) => {\r\n            if (response && response.data && response.data._id) {\r\n              toast.success(\"Successfully created\", {\r\n                position: \"top-right\",\r\n                autoClose: 1250,\r\n                hideProgressBar: false,\r\n                closeOnClick: false,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                progress: undefined,\r\n                onClose: () => {\r\n                  history.push(\"/\" + response.data._id);\r\n                  formik.setSubmitting(false);\r\n                },\r\n              });\r\n            }\r\n          })\r\n          .catch((reason) => {\r\n            toast.error(\"Bad request\", {\r\n              position: \"top-right\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: false,\r\n              progress: undefined,\r\n            });\r\n            formik.setSubmitting(false);\r\n          });\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <form className=\"form\" onSubmit={formik.handleSubmit}>\r\n      {!isLoading && (\r\n        <>\r\n          <div className=\"preview-title\">VK</div>\r\n          <VKPreview\r\n            image={formik.values.image}\r\n            title={formik.values.title}\r\n            linkTo={formik.values.linkTo}\r\n            isPlaceholderImage={isPlaceholderImage}\r\n            setIsPlaceholderImage={setIsPlaceholderImage}\r\n          />\r\n        </>\r\n      )}\r\n      {!isLoading && (\r\n        <>\r\n          <div className=\"preview-title\">Telegram</div>\r\n          <TGPreview\r\n            image={formik.values.image}\r\n            description={formik.values.description}\r\n            title={formik.values.title}\r\n            linkTo={formik.values.linkTo}\r\n            isPlaceholderImage={isPlaceholderImage}\r\n            setIsPlaceholderImage={setIsPlaceholderImage}\r\n          />\r\n        </>\r\n      )}\r\n      <div className=\"input-group\">\r\n        <label className=\"label\">Your Link</label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"string\"\r\n          name=\"linkTo\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.linkTo}\r\n        />\r\n        {true && formik.errors.linkTo}\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label className=\"label\">Image</label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"string\"\r\n          name=\"image\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.image}\r\n        />\r\n        {true && formik.errors.image}\r\n      </div>\r\n\r\n      <div className=\"input-group\">\r\n        <label className=\"label\">Title</label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"string\"\r\n          name=\"title\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.title}\r\n        />\r\n        {true && formik.errors.title}\r\n      </div>\r\n\r\n      <div\r\n        className=\"input-group\"\r\n        style={{ borderBottom: 0, paddingBottom: 0 }}\r\n      >\r\n        <label className=\"label\">Description</label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"string\"\r\n          name=\"description\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.description}\r\n        />\r\n        {true && formik.errors.description}\r\n      </div>\r\n      <div className=\"link-actions-container\">\r\n        {location.pathname.length !== 25 ? (\r\n          \"\"\r\n        ) : (\r\n          <CopyBtn text={formik.values.linkFrom} />\r\n        )}\r\n        <input\r\n          className=\"submit-btn\"\r\n          type=\"submit\"\r\n          disabled={formik.isSubmitting}\r\n          value={\r\n            location.pathname.length !== 25 ? \"Create Link\" : \"Update Link\"\r\n          }\r\n        />\r\n        {location.pathname.length === 25 ? (\r\n          <div className=\"link-actions-container\">\r\n            <a href=\"/\" className=\"submit-btn\">\r\n              Create new Link\r\n            </a>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      {location.pathname.length === 25 ? (\r\n        <>\r\n          <p className=\"note\">\r\n            *To Successfully update your link in Telegram use\r\n            <a className=\"note-link\" href=\"https://telegram.me/webpagebot\">\r\n              {\" \"}\r\n              https://telegram.me/webpagebot\r\n            </a>\r\n          </p>\r\n          <p className=\"note\">\r\n            **To Successfully update your link in VK use\r\n            <a className=\"note-link\" href=\"https://vk.com/dev/pages.clearCache\">\r\n              {\" \"}\r\n              https://vk.com/dev/pages.clearCache\r\n            </a>\r\n          </p>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\Form\\CopyBtn\\index.js",[],"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\Form\\VKPreview\\index.js",[],"C:\\Users\\quiteRight\\Desktop\\Links\\client\\src\\components\\Main\\Form\\TGPreview\\index.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":7,"column":9,"nodeType":"54","endLine":7,"endColumn":60},{"ruleId":"55","severity":1,"message":"56","line":57,"column":6,"nodeType":"57","endLine":57,"endColumn":25,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formik' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [formik, history, location.pathname]",{"range":"64","text":"65"},[2040,2059],"[formik, history, location.pathname]"]